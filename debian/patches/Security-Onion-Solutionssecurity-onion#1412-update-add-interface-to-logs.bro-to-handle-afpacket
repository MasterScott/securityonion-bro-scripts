Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-bro-scripts (20121004-0ubuntu0securityonion69) xenial; urgency=medium
 .
   * update add-interface-to-logs.bro to handle afpacket Security-Onion-Solutions/security-onion#1412
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-bro-scripts-20121004.orig/add-interface-to-logs.bro
+++ securityonion-bro-scripts-20121004/add-interface-to-logs.bro
@@ -8,9 +8,17 @@ event bro_init()
 	Log::add_filter(HTTP::LOG, [$name = "http-interfaces",
 	                            $path_func(id: Log::ID, path: string, rec: HTTP::Info) = 
 	                            	{ 
-	                            	local peer = get_event_peer()$descr;
-	                            	if ( peer in Cluster::nodes && Cluster::nodes[peer]?$interface )
-	                            		return cat("http_", Cluster::nodes[peer]$interface);
+					if ( Cluster::is_enabled() && Cluster::local_node_type() == Cluster::WORKER )
+					{
+						local node = Cluster::node;
+						if ( node in Cluster::nodes && Cluster::nodes[node]?$interface )
+						{
+							# If af_packet plugin is enabled, we need to strip "af_packet::" off the interface name
+							local interfacename = Cluster::nodes[node]$interface;
+							interfacename = subst_string(interfacename, "af_packet::", "");
+							return cat("http_", interfacename);
+						}
+					}
 	                            	else
 	                            		return "http";
 	                            	}
